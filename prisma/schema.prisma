// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  Id_Utilisateur   Int        @id @default(autoincrement())
  Civilite         String
  Pseudo           String     
  Prenom           String     
  Nom              String     
  Email            String     @unique
  Mdp              String    
  Latitude         Float
  Longitude        Float
  Ville            String
  Botanniste       Boolean    @default(false)
  Annonces         Annonce[]  @relation("AnnoncesRelation")
  Image            String     @default("")
  Gardiennage      Annonce[]  @relation("GardiennageRelation")
  conversations1   Conversation[] @relation("User1Conversations")
  conversations2   Conversation[] @relation("User2Conversations")
}


model Annonce {
  Id_Annonce       Int              @id @default(autoincrement())
  Id_Plante        String[]
  Titre            String
  Description      String
  Etat             Boolean          @default(false)
  DateDebut        DateTime?
  DateFin          DateTime?
  DateCreation     DateTime         @default(now())
  Latitude         Float
  Longitude        Float
  Ville            String
 Conseils         Conseil[]
  EtatPlantes      String[]
  Annonce          User             @relation("AnnoncesRelation", fields: [AnnonceUser], references: [Id_Utilisateur])
  AnnonceUser      Int              
  AnnonceGardien   User?            @relation("GardiennageRelation", fields: [AnnonceUserGard], references: [Id_Utilisateur])//fin 6.2
  AnnonceUserGard  Int?         
}

model Conseil{
  Id_Conseil      Int           @id @default(autoincrement())
  DateCreation    DateTime      @default(now())
  Username        String        @default("Anonyme")
  Message         String
  Annonce         Annonce       @relation(fields: [ConseilId], references: [Id_Annonce])
  ConseilId       Int           @default(2)
}




model Token {
  userId    Int      @unique
  token     String?  @unique
  createdAt DateTime @default(now())
}



model Conversation {
  Id_Conversation Int          @id @default(autoincrement())
  user1Id         Int
  user2Id         Int
  user1           User         @relation("User1Conversations", fields: [user1Id], references: [Id_Utilisateur])
  user2           User         @relation("User2Conversations", fields: [user2Id], references: [Id_Utilisateur])
  Messages        Message[]    @relation("ConversationMessages")
}

model Message {
  Id_Message      Int          @id @default(autoincrement())
  text            String
  conversationId  Int
  conversation    Conversation @relation("ConversationMessages", fields: [conversationId], references: [Id_Conversation])
  userId          Int
}



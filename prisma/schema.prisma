// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  Id_Utilisateur   Int        @id @default(autoincrement())
  Civilite         String
  Pseudo           String     
  Prenom           String     
  Nom              String     
  Email            String     @unique
  Mdp              String    
  Latitude         Float
  Longitude        Float
  Ville            String
  Botanniste       Boolean    @default(false)
  Annonces         Annonce[]  @relation("AnnoncesRelation")
  Image            String     @default("")
  Gardiennage      Annonce[]  @relation("GardiennageRelation")
  // UserProprietaire  GardePlantes[] @relation("UserProprietaireRelation")
  // UserGardien       GardePlantes[] @relation("UserGardienRelation")
}


model Annonce {
  Id_Annonce       Int              @id @default(autoincrement())
  Id_Plante        String[]
  Titre            String
  Description      String
  Etat             Boolean          @default(false)
  DateDebut        DateTime?
  DateFin          DateTime?
  DateCreation     DateTime         @default(now())
  Latitude         Float
  Longitude        Float
  Ville            String
 Conseils         Conseil[]
  EtatPlantes      String[]
  

  Annonce          User             @relation("AnnoncesRelation", fields: [AnnonceUser], references: [Id_Utilisateur])
  AnnonceUser      Int              
  AnnonceGardien   User?            @relation("GardiennageRelation", fields: [AnnonceUserGard], references: [Id_Utilisateur])//fin 6.2
  AnnonceUserGard  Int?   

  // AnnonceGP        GardePlantes[]             
}

model Conseil{
  Id_Conseil      Int           @id @default(autoincrement())
  DateCreation    DateTime      @default(now())
  Username        String        @default("Anonyme")
  Message         String
  Annonce         Annonce       @relation(fields: [ConseilId], references: [Id_Annonce])
  ConseilId       Int           @default(2)
}




model Token {
  userId    Int      @unique
  token     String?  @unique
  createdAt DateTime @default(now())
}


// model GardePlantes {
//   Id_GardePlante            Int     @id @default(autoincrement())
//   UtilisateurProprietaire   User    @relation("UserProprietaireRelation", fields: [UtilisateurProprietaireId], references: [Id_Utilisateur])
//   UtilisateurProprietaireId Int
//   UtilisateurGardien        User    @relation("UserGardienRelation", fields: [UtilisateurGardienId], references: [Id_Utilisateur])
//   UtilisateurGardienId    Int
//   Annonces                  Annonce @relation(fields: [AnnoncesId], references: [Id_Annonce])
//   AnnoncesId              Int

// }

// model ConseilsBotanistes {
//   Id_ConseilBotaniste        Int      @id
//   Id_UtilisateurBotaniste    Int    
//   Id_Plante                  Int
//   ConseilEntretien           String
//   DateConseil                DateTime @default(now())
// }

// model Conversation {
//   Id_Conversation               Int      @id
//   Id_UtilisateurProprietaire    Int    
//   Id_UtilisateurGardien         Int
//   Id_Message                    Message[]
//   //Annonces                      Annonce             @relation(fields: [Id_Conversation], references: [Id_Annonce])
// }

// model Message {
//   Id_Message               Int             @id
//   MessageProprietaire      String    
//   MessageGardien           String
//   DatePropretaire          DateTime        @default(now())
//   DateGardien              DateTime        @default(now())
//   Conversation             Conversation    @relation(fields: [Id_Message], references: [Id_Conversation])
// }

